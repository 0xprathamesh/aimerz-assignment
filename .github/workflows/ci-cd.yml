name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: 0xprathameshdoteth/aimerz-assignment

jobs:
  # Lint and Test Job
  lint-and-test:
    runs-on: ubuntu-latest
    name: Lint and Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run type-check

      - name: Build application
        run: npm run build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb://localhost:27017/test' }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'build-test-secret' }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL || 'http://localhost:3000' }}

  # Docker Build and Push Job
  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Build and Push Docker Image
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb+srv://0x:0x@todo.eqs4szd.mongodb.net/?retryWrites=true&w=majority&appName=Todo' }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'secrets' }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL || 'https://aimerztodo.vercel.app' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: 0xprathameshdoteth
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Debug environment variables
        run: |
          echo "MONGODB_URI: $MONGODB_URI"
          echo "NEXTAUTH_SECRET: $NEXTAUTH_SECRET"
          echo "NEXTAUTH_URL: $NEXTAUTH_URL"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            MONGODB_URI=${{ env.MONGODB_URI }}
            NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=${{ env.NEXTAUTH_URL }}

  # Deploy to Vercel
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: [lint-and-test, docker-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy to Vercel

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
          working-directory: ./
